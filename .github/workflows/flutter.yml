name: Flutter CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Enable web support for Flutter
      - name: Enable Flutter Web Support
        run: flutter config --enable-web

      # Install dependencies required for Chrome
      - name: Install Dependencies for Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common apt-transport-https wget

      # Install Google Chrome
      - name: Install Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          google-chrome --version

      # Install Matching Chromedriver (with improved fallback logic)
      - name: Install Chromedriver with Fallback
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -n 1)
          CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1)
          echo "Detected Chrome version: $CHROME_VERSION (Major: $CHROME_MAJOR_VERSION)"

          # Try to find the exact matching Chromedriver version
          CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION})
          if [ -z "$CHROMEDRIVER_VERSION" ]; then
            # If exact version is not found, fallback to the major version
            echo "Exact Chromedriver version not found for $CHROME_VERSION, trying major version $CHROME_MAJOR_VERSION"
            CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_MAJOR_VERSION})
          fi
          if [ -z "$CHROMEDRIVER_VERSION" ]; then
            # If major version is not found, fallback to the latest stable release
            echo "Major Chromedriver version not found for $CHROME_MAJOR_VERSION, trying the latest release"
            CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          fi

          if [ -z "$CHROMEDRIVER_VERSION" ]; then
            echo "Failed to find a matching Chromedriver version."
            exit 1
          fi

          echo "Using Chromedriver version: $CHROMEDRIVER_VERSION"
          wget https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/bin/
          rm chromedriver_linux64.zip
          chromedriver --version

      # Start Chromedriver
      - name: Start Chromedriver
        run: |
          nohup chromedriver --port=4444 --url-base=/wd/hub --whitelisted-ips &

      # Verify Chromedriver is running on port 4444
      - name: Verify Chromedriver on Port 4444
        run: |
          netstat -tuln | grep 4444 || { echo "Chromedriver not running on port 4444"; exit 1; }

      # Run integration tests using the web-server device
      - name: Run Integration Tests with Web-Server
        env:
          CHROME_EXECUTABLE: /usr/bin/google-chrome --headless --disable-gpu --no-sandbox
        run: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart -d web-server