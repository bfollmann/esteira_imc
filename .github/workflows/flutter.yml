name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'

      - name: Install dependencies
        run: flutter pub get

      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip apt-transport-https ca-certificates
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version # Verify installation

      - name: Install ChromeDriver
        run: |
          # Extract Chrome version
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          echo "Detected Chrome version: $CHROME_VERSION"
          
          # Fetch matching ChromeDriver version
          DRIVER_VERSION=$(wget -qO- "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION" || echo "")
          if [ -z "$DRIVER_VERSION" ]; then
            DRIVER_VERSION=$(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          fi
          echo "Detected ChromeDriver version: $DRIVER_VERSION"
          
          # Download and install ChromeDriver
          wget -N "https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip -d /usr/local/bin/
          rm chromedriver_linux64.zip

      - name: Start ChromeDriver
        run: |
          nohup chromedriver --port=4444 > /dev/null 2>&1 &

      - name: Linting
        run: flutter analyze

      - name: Unit Tests
        run: flutter test --coverage --test-randomize-ordering-seed=random

      - name: Widget Tests
        run: flutter test --coverage --test-randomize-ordering-seed=random

      - name: Build APK
        run: |
          sed -i 's/com.example.esteira_imc/com.YOURDOMAIN.esteira_imc/g' android/app/build.gradle
          sed -i 's/versionCode 1/versionCode 10/g' android/app/build.gradle
          sed -i 's/versionName "1.0.0"/versionName "1.0.1"/g' android/app/build.gradle
          flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Integration Tests
        run: |
          flutter config --enable-web
          flutter devices
          flutter pub get
          flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart -d web-server